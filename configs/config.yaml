# -----------------------------------------------------------
# Configuration File for CVAE Moodboard Project
# -----------------------------------------------------------
# This file contains all customizable settings for training
# and running the CVAE. It includes:
#
# 1. General paramters for repdoucibility adn device selection
# 2. Data loading paths and image preprocessing settings
# 3. Model architecture dimensions (input, condition, latent)
# 4. Training hyperparamters like learning rate and batch size
# 5. Output folder structure for saving models and results
#
# Keeping these settings here allows for quick experimentationand 
# clean separation from code logic in the training scripts

# --- General Settings ---
#name of the project (can be used for logging, naming folders, etc.)
project_name: cvae_moodboard_generator
#random seed for reproducibility (so results are consistent across runs)
seed: 42
#device to use for training ('cude' for GPU)
device: cuda

# --- Data Settings ---
#path to the CSV containing image IDs and labels (mood, color, etc.)
csv_path: data/filtered_mood_color_dataset.csv
#root directory where the filtered image folders are stored
image_root: data/filtered_images

#resize all images to 64x64 pixels before training (keeps input consistent)
image_size: 64
#number of images per training batch 
batch_size: 64
#number of CPU workers to use for loading data in parallel
num_workers: 4

condition_type: mood

# --- Model Settings ---
#flattened image size (3 color channels x 64 height x 64 width)
input_dim: 12288
#size of the condition vector (e.g. 8 mood + 8 color, one-hot encoded: mood_dim + color_dim)
cond_dim: 8

mood_labels:
  - cozy
  - dreamy
  - romantic
  - minimalist
  - vibrant
  - vintage
  - natural
  - adventurous

color_labels:
  - pink
  - red
  - orange
  - yellow
  - green
  - blue
  - purple
  - white



#size of the latent space (controls how compressed the representation is)
latent_dim: 64

# --- Training Settings ---
#how many full passes over the training dataset
num_epochs: 50
#step size used by the optimizer (too high = unstable, too low = slow)
learning_rate: 0.001
#save a checkpoint model every N epochs (useful for backup + resuming)
save_every: 2

# --- Output Paths ---
#root folder where all outputs (checkpoints, logs, generations) go
output_dir: outputs/
#file path where the trained model will be saved
checkpoint_path: outputs/checkpoints/cvae.pth
#folder to save new images generated by the trained model
generated_dir: outputs/generated/
#folder to store training logs or visualizations (e.g., loss curves)
log_dir: outputs/logs/